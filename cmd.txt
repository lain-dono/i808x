00	NOP	Нет операции
01	LXI B,d16	Загрузить в BC непосредственные данные d16
02	STAX B	Записать A по адресу Loc(BC)
03	INX B	Инкрементировать BС
04	INR B	Инкрементировать B
05	DCR B	B←(B) - 1
06	MVI B,d8	Переслать d8 в B
07	RLC	Сдвинуть A влево на один разряд с переносом
---
09	DAD B	Сложить BC с HL
0A	LDAX B	Загрузить A из ячейки с адресом Loc(BC)
0B	DCX B	BC←(BC) - 1
0C	INR C	Инкрементировать C
0D	DCR C	C←(C) - 1
0E	MVI C,d8	Переслать d8 в C
0F	RRC	Сдвинуть A вправо на один разряд с переносом

----
----
12	STAX D	Записать A по адресу Loc(DE)
13	INX D	Инкрементировать DE
14	INR D	Инкрементировать D
15	DCR D	D←(D) - 1
16	MVI D,d8	Переслать d8 в D
17	RAL	Циклический сдвиг CY + A влево
----
19	DAD D	Сложить DE с HL
1A	LDAX D	Загрузить A из ячейки с адресом Loc(DE)
1B	DCX D	DE←(DE) -1
1C	INR E	Инкрементировать E
1D	DCR E	E←(E) - 1
1E	MVI E,d8	Переслать d8 в E
1F	RAR	Циклический сдвиг CY + A вправо

20	RIM	Считать маску прерывания (только в 8085)
21	LXI H,d16	Загрузить в HL непосредственные данные d16
22	SHLD a16	Записать HL по адресу a16
23	INX H	Инкрементировать HL
24	INR H	Инкрементировать H
25	DCR H	H←(H) - 1
26	MVI H,d8	Переслать d8 в H
27	DAA	Десятичная коррекция аккумулятора (совершенно бесполезная команда. Я так и ни разу ей и не воспользовался:)
----
29	DAD H	Сложить HL с HL (удвоение HL)
2A	LHLD a16	Загрузить в HL содержимое ячейки с адресом a16
2B	DCX H	HL←(HL) - 1
2C	INR L	Инкрементировать L
2D	DCR L	L←(L) - 1
2E	MVI L,d8	Переслать d8 в L
2F	CMA	Инвертировать A

30	SIM	Установить маску прерывания (только в 8085)
31	LXI SP,d16	Загрузить в SP непосредственные данные d16
32	STA a16	Записать A по адресу a16
33	INX SP	Инкрементировать SP
34	INR M	Инкрементировать содержимое Loc(HL)
35	DCR M	Loc (HL)←(Loc(HL)) -1
36	MVI M,d8	Переслать d8 в Loc(HL)
37	STC	Установить флаг переноса (CF=1)
----
39	DAD SP	Сложить SP с HL
3A	LDA a16	Загрузить A из ячейки с адресом a16
3B	DCX SP	SP←(SP) -1
3C	INR A	A←(A) + 1 (инкрементировать A)
3D	DCR A	A←(A) - 1 (декремент A)
3E	MVI A,d8	Переслать d8 в A
3F	CMC	Инвертировать перенос





C0	RNZ	Возврат из подпрограммы, если FZ=1
C1	POP B	Извлечь слово из стека в BC
C2	JNZ a16	То же, если не нуль
C3	JMP a16	Перейти по адресу a16
C4	СNZ a16	То же, если не нуль
C5	PUSH B	Поместить в стек содержимое BC
C6	ADI d8	A←d8 + (A)
C7	RST 0	Запуск программы с адреса 0
C8	RZ	Возврат из подпрограммы, если FZ=0
C9	RET	Возврат из подпрограммы
CA	JZ a16	То же, если нуль
------
CC	CZ a16	Вызвать подпрограмму по адресу a16, если нуль
CD	CALL a16	Передать управление подпрограмме по адресу a16
CE	ACI d8	A←d8 + (A) + CF
CF	RST 1	Запуск программы с адреса 8h

D0	RNC	Возврат из подпрограммы, если FC=0
D1	POP D	Извлечь слово из стека в DE
D2	JNC a16	То же, если нет переноса
D3	OUT pp	Записать A в порт pp
D4	CNC a16	То же, если нет переноса
D5	PUSH D	Поместить в стек содержимое DE
D6	SUI d8	Вычесть d8 из А
D7	RST 2	Запуск программы с адреса 10h
D8	RC	Возврат из подпрограммы, если FC=1
----
DA	JC a16	То же, если перенос
DB	IN pp	Ввести данные из порта pp
DC	CC a16	То же, если перенос
----
DE	SBI d8	Вычесть c заемом d8 из А
DF	RST 3	Запуск программы с адреса 18h

E0	RPO	Возврат из подпрограммы, если паритет нечётный
E1	POP H	Извлечь слово из стека в HL
E2	JPO a16	Перейти по адресу a16, если паритет нечётный
E3	XTHL	Обмен содержимого вершины стека с содержимым HL
E4	CPO a16	То же, если нечётно
E5	PUSH H	Поместить в стек содержимое HL
E6	ANI d8	Логическое И непосредственные данные с A
E7	RST 4	Запуск программы с адреса 20h
E8	RPE	Возврат из подпрограммы, если паритет чётный
E9	PCHL	Передать управление по адресу в HL
EA	JPE a16	Перейти по адресу a16, если паритет чётный
EB	XCHG	Обмен содержимым DE и HL
EC	CPE a16	То же, если чётно
-----
EE	XRI d8	Исключающее ИЛИ d8 с A 
EF	RST 5	Запуск программы с адреса 28h

F0	RP	Возврат из подпрограммы, если FP=1
F1	POP PSW	Извлечь слово из стека в PSW
F2	JP a16	То же, если плюс
F3	DI	Запретить прерывания
F4	СP a16	То же, если плюс
F5	PUSH PSW	Поместить в стек содержимое PSW
F6	ORI d8	Логичеcкая операция A ИЛИ d8
F7	RST 6	Запуск программы с адреса 30h
F8	RM	Возврат из подпрограммы, если FP=0
F9	SPHL	Загрузить SP из HL
FA	JM a16	То же, если минус
FB	EI	Разрешить прерывания
FC	СM a16	То же, если минус
-----
FE	CPI d8	Сравнить A с непосредственными данными, заданными в команде
FF	RST 7	Запуск программы с адреса 38h
